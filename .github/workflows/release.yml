name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        id: release_notes
        run: |
          # Extract changelog section for this version
          VERSION=${{ steps.get_version.outputs.VERSION }}
          echo "Generating release notes for $VERSION"
          
          # Create release notes
          cat > release_notes.md << 'EOF'
          ## SwiftBar WARP Control ${{ steps.get_version.outputs.VERSION }}
          
          **Professional macOS menu bar tool for password-free Cloudflare WARP VPN control**
          
          ### Key Features
          - **Password-Free Control**: Toggle WARP without repetitive authentication
          - **One-Click Installation**: Automated setup for all dependencies
          - **Secure Design**: Minimal privilege escalation with isolated permissions
          - **Clean Interface**: Professional menu bar integration
          - **Smart Detection**: Automatic WARP status monitoring
          - **Easy Uninstall**: Complete removal capability
          
          ### Quick Installation
          ```bash
          curl -fsSL https://raw.githubusercontent.com/leeguooooo/swiftbar-warp-control/main/install.sh | bash
          ```
          
          ### System Requirements
          - macOS 10.15 (Catalina) or later
          - Cloudflare WARP application
          - Administrator access for initial setup
          
          ### What Gets Installed
          - WARP control script (`/usr/local/bin/warp-control.sh`)
          - Sudo configuration (`/etc/sudoers.d/warp-toggle`)
          - SwiftBar plugin (`~/swiftbar/warp.5s.sh`)
          - Homebrew (if not already installed)
          - SwiftBar (if not already installed)
          
          ### Uninstallation
          ```bash
          bash uninstall.sh
          ```
          
          ### Documentation
          - [Installation Guide](https://leeguooooo.github.io/swiftbar-warp-control/)
          - [Troubleshooting](https://github.com/leeguooooo/swiftbar-warp-control/blob/main/docs/TROUBLESHOOTING.md)
          - [Security Guide](https://github.com/leeguooooo/swiftbar-warp-control/blob/main/docs/SECURITY.md)
          
          ### Support
          - [Bug Reports](https://github.com/leeguooooo/swiftbar-warp-control/issues)
          - [Feature Requests](https://github.com/leeguooooo/swiftbar-warp-control/discussions)
          - [GitHub Sponsors](https://github.com/sponsors/leeguooooo)
          
          **Full Changelog**: https://github.com/leeguooooo/swiftbar-warp-control/blob/main/CHANGELOG.md
          EOF

      - name: Create Release Archive
        run: |
          # Create a clean archive without .git directory
          mkdir -p dist
          git archive --format=tar.gz --prefix=swiftbar-warp-control-${{ steps.get_version.outputs.VERSION }}/ HEAD > dist/swiftbar-warp-control-${{ steps.get_version.outputs.VERSION }}.tar.gz
          
          # Create a zip archive as well
          git archive --format=zip --prefix=swiftbar-warp-control-${{ steps.get_version.outputs.VERSION }}/ HEAD > dist/swiftbar-warp-control-${{ steps.get_version.outputs.VERSION }}.zip
          
          # Generate checksums
          cd dist
          sha256sum *.tar.gz *.zip > SHA256SUMS
          
          # List created files
          ls -la

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "SwiftBar WARP Control ${{ steps.get_version.outputs.VERSION }}"
          body_path: release_notes.md
          files: |
            dist/swiftbar-warp-control-${{ steps.get_version.outputs.VERSION }}.tar.gz
            dist/swiftbar-warp-control-${{ steps.get_version.outputs.VERSION }}.zip
            dist/SHA256SUMS
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update latest release badge
        run: |
          echo "Release ${{ steps.get_version.outputs.VERSION }} created successfully!"
          echo "Download URL: https://github.com/leeguooooo/swiftbar-warp-control/releases/tag/${{ steps.get_version.outputs.VERSION }}"